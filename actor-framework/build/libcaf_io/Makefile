# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 2.8

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list

# Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/hector/Git/ActorFramework

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/hector/Git/ActorFramework/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running interactive CMake command-line interface..."
	/usr/bin/cmake -i .
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: install/local
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: install/strip
.PHONY : install/strip/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target test
test:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running tests..."
	/usr/bin/ctest --force-new-ctest-process $(ARGS)
.PHONY : test

# Special rule for the target test
test/fast: test
.PHONY : test/fast

# The main all target
all: cmake_check_build_system
	cd /home/hector/Git/ActorFramework/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/hector/Git/ActorFramework/build/CMakeFiles /home/hector/Git/ActorFramework/build/libcaf_io/CMakeFiles/progress.marks
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f CMakeFiles/Makefile2 libcaf_io/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/hector/Git/ActorFramework/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f CMakeFiles/Makefile2 libcaf_io/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f CMakeFiles/Makefile2 libcaf_io/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f CMakeFiles/Makefile2 libcaf_io/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/hector/Git/ActorFramework/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
libcaf_io/CMakeFiles/libcaf_io.dir/rule:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f CMakeFiles/Makefile2 libcaf_io/CMakeFiles/libcaf_io.dir/rule
.PHONY : libcaf_io/CMakeFiles/libcaf_io.dir/rule

# Convenience name for target.
libcaf_io: libcaf_io/CMakeFiles/libcaf_io.dir/rule
.PHONY : libcaf_io

# fast build rule for target.
libcaf_io/fast:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/build
.PHONY : libcaf_io/fast

src/acceptor_manager.o: src/acceptor_manager.cpp.o
.PHONY : src/acceptor_manager.o

# target to build an object file
src/acceptor_manager.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/acceptor_manager.cpp.o
.PHONY : src/acceptor_manager.cpp.o

src/acceptor_manager.i: src/acceptor_manager.cpp.i
.PHONY : src/acceptor_manager.i

# target to preprocess a source file
src/acceptor_manager.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/acceptor_manager.cpp.i
.PHONY : src/acceptor_manager.cpp.i

src/acceptor_manager.s: src/acceptor_manager.cpp.s
.PHONY : src/acceptor_manager.s

# target to generate assembly for a file
src/acceptor_manager.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/acceptor_manager.cpp.s
.PHONY : src/acceptor_manager.cpp.s

src/basp_broker.o: src/basp_broker.cpp.o
.PHONY : src/basp_broker.o

# target to build an object file
src/basp_broker.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/basp_broker.cpp.o
.PHONY : src/basp_broker.cpp.o

src/basp_broker.i: src/basp_broker.cpp.i
.PHONY : src/basp_broker.i

# target to preprocess a source file
src/basp_broker.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/basp_broker.cpp.i
.PHONY : src/basp_broker.cpp.i

src/basp_broker.s: src/basp_broker.cpp.s
.PHONY : src/basp_broker.s

# target to generate assembly for a file
src/basp_broker.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/basp_broker.cpp.s
.PHONY : src/basp_broker.cpp.s

src/broker.o: src/broker.cpp.o
.PHONY : src/broker.o

# target to build an object file
src/broker.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/broker.cpp.o
.PHONY : src/broker.cpp.o

src/broker.i: src/broker.cpp.i
.PHONY : src/broker.i

# target to preprocess a source file
src/broker.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/broker.cpp.i
.PHONY : src/broker.cpp.i

src/broker.s: src/broker.cpp.s
.PHONY : src/broker.s

# target to generate assembly for a file
src/broker.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/broker.cpp.s
.PHONY : src/broker.cpp.s

src/default_multiplexer.o: src/default_multiplexer.cpp.o
.PHONY : src/default_multiplexer.o

# target to build an object file
src/default_multiplexer.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/default_multiplexer.cpp.o
.PHONY : src/default_multiplexer.cpp.o

src/default_multiplexer.i: src/default_multiplexer.cpp.i
.PHONY : src/default_multiplexer.i

# target to preprocess a source file
src/default_multiplexer.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/default_multiplexer.cpp.i
.PHONY : src/default_multiplexer.cpp.i

src/default_multiplexer.s: src/default_multiplexer.cpp.s
.PHONY : src/default_multiplexer.s

# target to generate assembly for a file
src/default_multiplexer.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/default_multiplexer.cpp.s
.PHONY : src/default_multiplexer.cpp.s

src/hook.o: src/hook.cpp.o
.PHONY : src/hook.o

# target to build an object file
src/hook.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/hook.cpp.o
.PHONY : src/hook.cpp.o

src/hook.i: src/hook.cpp.i
.PHONY : src/hook.i

# target to preprocess a source file
src/hook.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/hook.cpp.i
.PHONY : src/hook.cpp.i

src/hook.s: src/hook.cpp.s
.PHONY : src/hook.s

# target to generate assembly for a file
src/hook.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/hook.cpp.s
.PHONY : src/hook.cpp.s

src/manager.o: src/manager.cpp.o
.PHONY : src/manager.o

# target to build an object file
src/manager.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/manager.cpp.o
.PHONY : src/manager.cpp.o

src/manager.i: src/manager.cpp.i
.PHONY : src/manager.i

# target to preprocess a source file
src/manager.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/manager.cpp.i
.PHONY : src/manager.cpp.i

src/manager.s: src/manager.cpp.s
.PHONY : src/manager.s

# target to generate assembly for a file
src/manager.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/manager.cpp.s
.PHONY : src/manager.cpp.s

src/max_msg_size.o: src/max_msg_size.cpp.o
.PHONY : src/max_msg_size.o

# target to build an object file
src/max_msg_size.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/max_msg_size.cpp.o
.PHONY : src/max_msg_size.cpp.o

src/max_msg_size.i: src/max_msg_size.cpp.i
.PHONY : src/max_msg_size.i

# target to preprocess a source file
src/max_msg_size.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/max_msg_size.cpp.i
.PHONY : src/max_msg_size.cpp.i

src/max_msg_size.s: src/max_msg_size.cpp.s
.PHONY : src/max_msg_size.s

# target to generate assembly for a file
src/max_msg_size.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/max_msg_size.cpp.s
.PHONY : src/max_msg_size.cpp.s

src/middleman.o: src/middleman.cpp.o
.PHONY : src/middleman.o

# target to build an object file
src/middleman.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/middleman.cpp.o
.PHONY : src/middleman.cpp.o

src/middleman.i: src/middleman.cpp.i
.PHONY : src/middleman.i

# target to preprocess a source file
src/middleman.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/middleman.cpp.i
.PHONY : src/middleman.cpp.i

src/middleman.s: src/middleman.cpp.s
.PHONY : src/middleman.s

# target to generate assembly for a file
src/middleman.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/middleman.cpp.s
.PHONY : src/middleman.cpp.s

src/multiplexer.o: src/multiplexer.cpp.o
.PHONY : src/multiplexer.o

# target to build an object file
src/multiplexer.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/multiplexer.cpp.o
.PHONY : src/multiplexer.cpp.o

src/multiplexer.i: src/multiplexer.cpp.i
.PHONY : src/multiplexer.i

# target to preprocess a source file
src/multiplexer.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/multiplexer.cpp.i
.PHONY : src/multiplexer.cpp.i

src/multiplexer.s: src/multiplexer.cpp.s
.PHONY : src/multiplexer.s

# target to generate assembly for a file
src/multiplexer.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/multiplexer.cpp.s
.PHONY : src/multiplexer.cpp.s

src/publish_local_groups.o: src/publish_local_groups.cpp.o
.PHONY : src/publish_local_groups.o

# target to build an object file
src/publish_local_groups.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/publish_local_groups.cpp.o
.PHONY : src/publish_local_groups.cpp.o

src/publish_local_groups.i: src/publish_local_groups.cpp.i
.PHONY : src/publish_local_groups.i

# target to preprocess a source file
src/publish_local_groups.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/publish_local_groups.cpp.i
.PHONY : src/publish_local_groups.cpp.i

src/publish_local_groups.s: src/publish_local_groups.cpp.s
.PHONY : src/publish_local_groups.s

# target to generate assembly for a file
src/publish_local_groups.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/publish_local_groups.cpp.s
.PHONY : src/publish_local_groups.cpp.s

src/remote_actor_proxy.o: src/remote_actor_proxy.cpp.o
.PHONY : src/remote_actor_proxy.o

# target to build an object file
src/remote_actor_proxy.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/remote_actor_proxy.cpp.o
.PHONY : src/remote_actor_proxy.cpp.o

src/remote_actor_proxy.i: src/remote_actor_proxy.cpp.i
.PHONY : src/remote_actor_proxy.i

# target to preprocess a source file
src/remote_actor_proxy.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/remote_actor_proxy.cpp.i
.PHONY : src/remote_actor_proxy.cpp.i

src/remote_actor_proxy.s: src/remote_actor_proxy.cpp.s
.PHONY : src/remote_actor_proxy.s

# target to generate assembly for a file
src/remote_actor_proxy.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/remote_actor_proxy.cpp.s
.PHONY : src/remote_actor_proxy.cpp.s

src/remote_group.o: src/remote_group.cpp.o
.PHONY : src/remote_group.o

# target to build an object file
src/remote_group.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/remote_group.cpp.o
.PHONY : src/remote_group.cpp.o

src/remote_group.i: src/remote_group.cpp.i
.PHONY : src/remote_group.i

# target to preprocess a source file
src/remote_group.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/remote_group.cpp.i
.PHONY : src/remote_group.cpp.i

src/remote_group.s: src/remote_group.cpp.s
.PHONY : src/remote_group.s

# target to generate assembly for a file
src/remote_group.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/remote_group.cpp.s
.PHONY : src/remote_group.cpp.s

src/stream_manager.o: src/stream_manager.cpp.o
.PHONY : src/stream_manager.o

# target to build an object file
src/stream_manager.cpp.o:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/stream_manager.cpp.o
.PHONY : src/stream_manager.cpp.o

src/stream_manager.i: src/stream_manager.cpp.i
.PHONY : src/stream_manager.i

# target to preprocess a source file
src/stream_manager.cpp.i:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/stream_manager.cpp.i
.PHONY : src/stream_manager.cpp.i

src/stream_manager.s: src/stream_manager.cpp.s
.PHONY : src/stream_manager.s

# target to generate assembly for a file
src/stream_manager.cpp.s:
	cd /home/hector/Git/ActorFramework/build && $(MAKE) -f libcaf_io/CMakeFiles/libcaf_io.dir/build.make libcaf_io/CMakeFiles/libcaf_io.dir/src/stream_manager.cpp.s
.PHONY : src/stream_manager.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... libcaf_io"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... test"
	@echo "... src/acceptor_manager.o"
	@echo "... src/acceptor_manager.i"
	@echo "... src/acceptor_manager.s"
	@echo "... src/basp_broker.o"
	@echo "... src/basp_broker.i"
	@echo "... src/basp_broker.s"
	@echo "... src/broker.o"
	@echo "... src/broker.i"
	@echo "... src/broker.s"
	@echo "... src/default_multiplexer.o"
	@echo "... src/default_multiplexer.i"
	@echo "... src/default_multiplexer.s"
	@echo "... src/hook.o"
	@echo "... src/hook.i"
	@echo "... src/hook.s"
	@echo "... src/manager.o"
	@echo "... src/manager.i"
	@echo "... src/manager.s"
	@echo "... src/max_msg_size.o"
	@echo "... src/max_msg_size.i"
	@echo "... src/max_msg_size.s"
	@echo "... src/middleman.o"
	@echo "... src/middleman.i"
	@echo "... src/middleman.s"
	@echo "... src/multiplexer.o"
	@echo "... src/multiplexer.i"
	@echo "... src/multiplexer.s"
	@echo "... src/publish_local_groups.o"
	@echo "... src/publish_local_groups.i"
	@echo "... src/publish_local_groups.s"
	@echo "... src/remote_actor_proxy.o"
	@echo "... src/remote_actor_proxy.i"
	@echo "... src/remote_actor_proxy.s"
	@echo "... src/remote_group.o"
	@echo "... src/remote_group.i"
	@echo "... src/remote_group.s"
	@echo "... src/stream_manager.o"
	@echo "... src/stream_manager.i"
	@echo "... src/stream_manager.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/hector/Git/ActorFramework/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

